version: '3.7'

services:
  init-tls-keys:
    # Dont do this in anything other than a demo there are much better ways to do key management.
    image: paulczar/omgwtfssl
    init: true
    command: ash -c 'if [ -e "/certs/ssl.key" ]; then echo "TLS stuff already exists - exiting"; else echo "Initializing certs..."; /usr/local/bin/generate-certs && chown -R 10001 /certs; fi'
    volumes:
       - certs:/certs
    environment:
      - SSL_SUBJECT=otel
      - CA_SUBJECT=otel
      - CA_CERT=/certs/ca.crt
      - SSL_KEY=/certs/ssl.key
      - SSL_CSR=/certs/ssl.csr
      - SSL_CERT=/certs/ssl.crt
      - SSL_IP=127.0.0.1,10.1.1.4,10.1.20.4,10.1.10.4
     
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    restart: always
    command: ["--config=/etc/otel-collector-config.yaml"]
    depends_on:
      init-tls-keys:
        condition: service_started      
    volumes:
      - ./otel/otel-collector-config.yaml:/etc/otel-collector-config.yaml
      - certs:/certs
      - ./logs/:/logs/
    ports:
      - 1888:1888 # pprof extension
      - 18888:18888 # Prometheus metrics exposed by the Collector
      - 58888:58888
      - 18889:18889 # Prometheus exporter metrics
      - 13133:13133 # health_check extension
      - 54317:54317
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP http receiver
      - 55679:55679 # zpages extension
       
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    ports:
      - 9090:9090

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - loki-data:/data
      - ./loki:/etc/loki
    command: -config.file=/etc/loki/local-config.yaml
    restart: always
          
  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    volumes:
      - ./alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    ports:
      - 9093:9093

    
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
#      - ./provisioning/dashboards:/etc/grafana/provisioning/dashboards
#      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,natel-discrete-panel,grafana-piechart-panel
    restart: unless-stopped
    ports:
      - 3333:3000

      
  pushgateway:
    image: prom/pushgateway:latest
    container_name: pushgateway
    restart: unless-stopped
    ports:
      - 9091:9091
        

volumes:
  certs:
  prometheus_data:
  grafana_data:
  loki-data:
